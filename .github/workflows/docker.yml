name: Build and deploy docker images
on:
  push:
    branches:
      - master
    tags:
      - 'mailer-[0-9]+.[0-9]+.[0-9]+'
      - 'scheduler-[0-9]+.[0-9]+.[0-9]+'
      - 'security-[0-9]+.[0-9]+.[0-9]+'
      - 'gateway-[0-9]+.[0-9]+.[0-9]+'
      - 'notifications-[0-9]+.[0-9]+.[0-9]+'
      - 'pdf-[0-9]+.[0-9]+.[0-9]+'

jobs:
  mailer:
    runs-on: ubuntu-latest
    name: Deploy Mailer to DockerHub
    if: startsWith(github.ref, 'refs/tags/mailer')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh mailer ./services/mailer/docker/prod/Dockerfile ./services/mailer/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

  scheduler:
    runs-on: ubuntu-latest
    name: Deploy Scheduler to DockerHub
    if: startsWith(github.ref, 'refs/tags/scheduler')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh scheduler ./services/scheduler/docker/prod/Dockerfile ./services/scheduler/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

  security:
    runs-on: ubuntu-latest
    name: Deploy Security to DockerHub
    if: startsWith(github.ref, 'refs/tags/security')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh security ./services/security/docker/prod/Dockerfile ./services/security/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

  gateway:
    runs-on: ubuntu-latest
    name: Deploy Gateway to DockerHub
    if: startsWith(github.ref, 'refs/tags/gateway')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh gateway ./services/gateway/docker/prod/Dockerfile ./services/gateway/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

  notifications:
    runs-on: ubuntu-latest
    name: Deploy Notifications to DockerHub
    if: startsWith(github.ref, 'refs/tags/notifications')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh notifications ./services/notifications/docker/prod/Dockerfile ./services/notifications/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}

  pdf:
    runs-on: ubuntu-latest
    name: Deploy Pdf to DockerHub
    if: startsWith(github.ref, 'refs/tags/pdf')
    steps:
      - uses: actions/checkout@v2
      - run: bash ./ci-scripts/docker-release.sh pdf ./services/pdf/docker/prod/Dockerfile ./services/pdf/package.json
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
