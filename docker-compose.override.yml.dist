version: "3.9"

services:
  js:
    volumes:
      - .:/app:delegated
      - ./node_modules:/app/node_modules/

  adminer:
    image: adminer
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - app

  security:
    environment:
      OAUTH_CREATE_USER_ACCOUNT: "true"
      OAUTH_ENABLED_PROVIDERS: "keycloak"
      KEYCLOAK_URL: "http://keycloak:8090"
      AUTHENTICATION_STRATEGY: "keycloak"
      REFRESH_TOKEN_EXPIRATION: 60000
    restart: unless-stopped
    volumes:
      - ./services/security/node_modules:/app/build/services/security/node_modules
      - ./services/security/src:/app/services/security/src
      - ./services/security/swagger:/app/services/security/swagger
      - ./services/security/init-data-volume:/app/build/services/init-data-volume
    ports:
      - 50050:50050

  redis:
    ports:
      - 6379:6379

  postgres:
    image: postgres:14-alpine
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USERNAME: postgres
      POSTGRES_MULTIPLE_DATABASES: app,users
    ports:
      - 5432:5432
    networks:
      - app

  keycloak:
    image: jboss/keycloak:16.1.1
    command: ["-Djboss.socket.binding.port-offset=10", "-Dkeycloak.import=/security-realm.json", "-Dkeycloak.profile.feature.upload_scripts=enabled"]
    env_file: keycloak/variables.env
    ports:
      - 8090:8090
    networks:
      - app
    volumes:
      - ./keycloak/config/security-realm.json:/security-realm.json

  keycloak-postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - app